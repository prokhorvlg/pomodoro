{"version":3,"sources":["components/NextControl.js","assets/DingSound.wav","components/SoundControl.js","components/ResetControl.js","components/SetsControl.js","components/PlayPauseControl.js","components/TimerFillBar.js","components/Timer.js","components/App.js","index.js"],"names":["NextControl","startNextSession","className","onClick","SoundControl","timeRemaining","useState","soundEnabled","setSoundEnabled","useEffect","Audio","DingSound","play","ResetControl","pomosCompleted","setPomosCompleted","SetsControl","sets","setSets","PlayPauseControl","toggleTimerRunning","TimerFillBar","timeTotal","fillRemaining","setFillRemaining","xmlns","viewBox","r","cy","cx","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","Timer","setTimeRemaining","sessionType","timerRunning","setTimerRunning","fullReset","content","timeString","setTimeString","timerInterval","setInterval","newTimeRemaining","console","log","clearInterval","minutes","Math","floor","DONE","WORK_SESSION","SHORT_BREAK","LONG_BREAK","times","App","sessionNumber","setSessionNumber","setSessionType","setTimeTotal","retainPomosCompleted","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.585e957e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NextControl = ({ startNextSession }) => {\r\n  const nextMode = () => {\r\n    startNextSession();\r\n  }\r\n\r\n  return (\r\n    <div className=\"control-next\">\r\n      <button className=\"control-next-button\" onClick={() => { nextMode(); }}>\r\n        <p>Next</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NextControl;\r\n","export default __webpack_public_path__ + \"static/media/DingSound.2b0a0d91.wav\";","import React, { useEffect, useState } from 'react';\r\nimport DingSound from '../assets/DingSound.wav';\r\n\r\nconst SoundControl = ({ timeRemaining }) => {\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n\r\n  const toggleSound = () => {\r\n    setSoundEnabled(!soundEnabled);\r\n  }\r\n\r\n  // TIMER SOUND: Plays sound when timeRemaining reaches zero.\r\n  useEffect(() => {\r\n    if (soundEnabled && timeRemaining === 0) {\r\n      new Audio(DingSound).play();\r\n    }\r\n  }, [timeRemaining]);\r\n  \r\n  return (\r\n    <div className=\"control-sound\">\r\n      <button className=\"control-sound-button\" onClick={() => { toggleSound(); }}>\r\n        <p>Sound?</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoundControl;\r\n","import React from 'react';\r\n\r\nconst ResetControl = ({ pomosCompleted, setPomosCompleted }) => {\r\n  const resetSession = () => {\r\n    setPomosCompleted(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"control-reset\">\r\n      <button className=\"control-reset-button\" onClick={() => { resetSession(); }}>\r\n        <p>{pomosCompleted}</p>\r\n        <p>Reset</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetControl;\r\n","import React from 'react';\r\n\r\nconst SetsControl = ({ sets, setSets }) => {\r\n  const decreaseSets = () => {\r\n    if (sets > 1) {\r\n      setSets((sets) => sets - 1);\r\n    }\r\n  }\r\n\r\n  const increaseSets = () => {\r\n    if (sets < 10) {\r\n      setSets((sets) => sets + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"control-sets\">\r\n      <button onClick={() => { decreaseSets(); }}>decrease sets</button>\r\n        <p>{sets}</p>\r\n      <button onClick={() => { increaseSets(); }}>increase sets</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetsControl;\r\n","\r\n\r\nimport React from 'react';\r\n\r\nconst PlayPauseControl = ({ toggleTimerRunning }) => {  \r\n  return (\r\n    <div className=\"play-pause-control\">\r\n      <button className=\"play-pause-button\" onClick={() => { toggleTimerRunning(); }}>\r\n        Play/Pause\r\n        </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayPauseControl;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst TimerFillBar = ({ timeRemaining, timeTotal }) => {\r\n\r\n  const [fillRemaining, setFillRemaining] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fraction = timeRemaining / timeTotal;\r\n    setFillRemaining(440 - (440 * fraction));\r\n  }, [timeRemaining]);\r\n\r\n  return (\r\n      <div className=\"timer-dial\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 160 160\">\r\n          <circle r=\"69.85699\" cy=\"81\" cx=\"81\" fill=\"none\" \r\n            stroke=\"white\" \r\n            strokeWidth=\"1\" \r\n            />\r\n          <circle r=\"69.85699\" cy=\"81\" cx=\"81\" fill=\"none\" \r\n            stroke=\"green\" \r\n            strokeWidth=\"6\" \r\n            strokeDasharray={440} \r\n            strokeDashoffset={fillRemaining}\r\n            strokeLinecap=\"round\"\r\n            />\r\n          \r\n        </svg>\r\n        <p>{timeTotal}</p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TimerFillBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PlayPauseControl from './PlayPauseControl';\r\nimport TimerFillBar from './TimerFillBar';\r\n\r\n// TIME_MULTIPLIER: Controls the rate at which time progresses in the timer.\r\nconst TIME_MULTIPLIER = 0.001;\r\n\r\nconst Timer = ({ startNextSession, timeRemaining, setTimeRemaining, sessionType, timeTotal, timerRunning, setTimerRunning, fullReset, content }) => {\r\n  // Contains the time content displayed to user in timer dial.\r\n  const [timeString, setTimeString] = useState(null);\r\n\r\n  // TIMER: Contains the logic which controls the timer interval.\r\n  useEffect(() => {\r\n    let timerInterval;\r\n    if (timerRunning) {\r\n      timerInterval = setInterval(() => {\r\n        const newTimeRemaining = timeRemaining - 1;\r\n        if (newTimeRemaining === -1) {\r\n          startNextSession();\r\n          console.log(\"ended session\");\r\n        } else {\r\n          setTimeRemaining(newTimeRemaining);\r\n        }\r\n      }, 1000 * TIME_MULTIPLIER)\r\n    }\r\n    return () => clearInterval(timerInterval);\r\n  }, [timerRunning, timeRemaining]);\r\n\r\n  // TIMER PARSING: Parses the time remaining into a printable string.\r\n  useEffect(() => {\r\n    var minutes = Math.floor(timeRemaining / 60);\r\n    var seconds = timeRemaining - minutes * 60;\r\n    setTimeString(minutes + \":\" + seconds);\r\n  }, [timeRemaining]);\r\n\r\n  const toggleTimerRunning = () => {\r\n    if (sessionType === content.DONE) {\r\n      fullReset(true);\r\n    }\r\n    setTimerRunning(!timerRunning);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"timer\">\r\n        <button className=\"timer-button\" onClick={() => { toggleTimerRunning(); }}>\r\n          <TimerFillBar \r\n              timeRemaining={timeRemaining}\r\n              timeTotal={timeTotal}\r\n            />\r\n          <div className=\"timer-time-remaining\">\r\n            <p>{timeString}</p>\r\n          </div>\r\n          <div className=\"timer-mode\">\r\n            <p>{sessionType}</p>\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <PlayPauseControl \r\n          toggleTimerRunning={toggleTimerRunning}\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from 'react';\n\nimport NextControl from './NextControl';\nimport SoundControl from './SoundControl';\nimport ResetControl from './ResetControl';\nimport SetsControl from './SetsControl';\nimport Timer from './Timer';\n\n// content: Values displayed to the user.\nconst content = {\n  WORK_SESSION: \"work\",\n  SHORT_BREAK: \"short break\",\n  LONG_BREAK: \"long break\",\n  DONE: \"done!\"\n};\n\n// times: Number of seconds pre-set for each session type. \nconst times = {\n  WORK_SESSION: 1500,\n  SHORT_BREAK: 300,\n  LONG_BREAK: 1500,\n};\n\nconst App = () => {\n  // STATE: Contains data relevant to application.\n  \n  // Exact id of current session, used to determine what type of session to run. \n  const [sessionNumber, setSessionNumber] = useState(1);\n  // Type of current session, displayed to user in timer dial.\n  const [sessionType, setSessionType] = useState(content.WORK_SESSION);\n\n  // Contains number of total pomo-break pairs. Adjustable by user.\n  const [sets, setSets] = useState(4);\n  // Total number of pomo sessions completed by user, seperate from session count used for internal calculations.\n  const [pomosCompleted, setPomosCompleted] = useState(0);\n\n  // Contains total number of seconds in current session.\n  const [timeTotal, setTimeTotal] = useState(null);\n  // Contains number of seconds remaining in current session.\n  const [timeRemaining, setTimeRemaining] = useState(null);\n\n  // Contains whether or not the timer is running or paused.\n  const [timerRunning, setTimerRunning] = useState(false);\n\n  // startNextSession: Decides how to start the next session based on the previous session.\n  const startNextSession = () => {\n    console.log(sessionNumber);\n    if (sets * 2 <= sessionNumber) {\n      // reset the pomo\n      console.log(\"DONE!\", sessionNumber);\n      setTimerRunning(false);\n      setSessionType(content.DONE);\n    } else if (((sets * 2) - 2) === sessionNumber) {\n      // final pomo session\n      console.log(\"final pomo!\");\n      setSessionNumber((sessionNumber) => sessionNumber + 1);\n      setSessionType(content.WORK_SESSION);\n      setTimeRemaining(times.WORK_SESSION);\n      setTimeTotal(times.WORK_SESSION);\n    } else if (((sets * 2) - 1) === sessionNumber) {\n      // long break at the end\n      console.log(\"final long break!\");\n      setSessionNumber((sessionNumber) => sessionNumber + 1);\n      setPomosCompleted((pomosCompleted) => pomosCompleted + 1);\n      setSessionType(content.LONG_BREAK);\n      setTimeRemaining(times.LONG_BREAK);\n      setTimeTotal(times.LONG_BREAK);\n    } else {\n      if (sessionNumber % 2 === 0) {\n        // regular pomo session\n        console.log(\"normal pomo!\");\n        setSessionNumber((sessionNumber) => sessionNumber + 1);\n        setSessionType(content.WORK_SESSION);\n        setTimeRemaining(times.WORK_SESSION);\n        setTimeTotal(times.WORK_SESSION);\n      } else if (sessionNumber % 2 === 1) {\n        // regular short break\n        console.log(\"normal short break!\");\n        setSessionNumber((sessionNumber) => sessionNumber + 1);\n        setPomosCompleted((pomosCompleted) => pomosCompleted + 1);\n        setSessionType(content.SHORT_BREAK);\n        setTimeRemaining(times.SHORT_BREAK);\n        setTimeTotal(times.SHORT_BREAK);\n      }\n    }\n  }\n\n  // fullReset: Reset the app state to start mode.\n  const fullReset = (retainPomosCompleted = false) => {\n    console.log(\"full reset.\");\n    console.log(\"normal pomo!\");\n    setSessionNumber(1);\n    setSessionType(content.WORK_SESSION);\n    setTimeRemaining(times.WORK_SESSION);\n    setTimeTotal(times.WORK_SESSION);\n    if (!retainPomosCompleted) {\n      setPomosCompleted(0);\n    }\n  }\n\n  // RESET ON-LOAD: Set app into ideal state on app load.\n  useEffect(() => {\n    fullReset();\n  }, []);  \n\n  useEffect(() => {\n    document.title = sessionType + ' - pomodoro';\n  }, [sessionType]);\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-title\">\n        <h1>pomodoro</h1>\n      </div>\n      <SetsControl \n          sets={sets}\n          setSets={setSets}\n        />\n      <Timer \n          startNextSession={startNextSession}\n          timeRemaining={timeRemaining}\n          setTimeRemaining={setTimeRemaining}\n          sessionType={sessionType}\n          timeTotal={timeTotal}\n          timerRunning={timerRunning}\n          setTimerRunning={setTimerRunning}\n          fullReset={fullReset}\n          content={content}\n        />\n      <div className=\"controls\">\n        <ResetControl \n            pomosCompleted={pomosCompleted}\n            setPomosCompleted={setPomosCompleted}\n          />\n        <NextControl \n            startNextSession={startNextSession}\n          />\n        <SoundControl \n            timeRemaining={timeRemaining}\n          />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}